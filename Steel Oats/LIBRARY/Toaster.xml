<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="Toaster" itemID="6600df88-00000133" linkageExportForAS="true" linkageBaseClass="GuyClip" linkageClassName="Toaster" lastModified="1712417911">
  <timeline>
    <DOMTimeline name="Toaster" layerDepthEnabled="true">
      <layers>
        <DOMLayer name="Layer_2" color="#9933CC" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <Actionscript>
                <script><![CDATA[import flash.events.KeyboardEvent;
import flash.geom.Point;
import flash.display.MovieClip;


var velocity: Point = new Point()
var velocityTo: Point = new Point()


var sinceLaunched = 0.0

var isOnFloor = false

var dashT = 0
var dashDirectionX = 0
var dashDirectionY = 0

Game.toaster = this

function update() {
	var delta = 1 / 60
	delta *= Game.speed
	velocityTo.x = 0

	var accelDuration = 0.5
	
	var speed: Number = 800
	
	if (Game.bread.launched && Game.bread.jumpHolding) {
		sinceLaunched += delta
		velocity.x -= velocity.x * 0.1
		//velocity.x = bread.x < x ? -1 : 1
		//x = lerp(x, bread.x, Math.min(sinceLaunched / 10.0, 0.05))
	} else {
		if (Game.keyAPressed) {
			velocityTo.x -= 1
		}
		if (Game.keyDPressed) {
			velocityTo.x += 1
		}
		velocityTo.x *= speed
		
		if (Math.abs(velocityTo.x) > 0){
			if (Math.abs(velocity.x) < speed * 0.3) {
				accelDuration = 0.1
			} else {
				accelDuration = 1.0
			}
		}
		
		velocity.x = moveToward(velocity.x, velocityTo.x, speed / accelDuration * delta)
	}
	
	x += velocity.x * delta
	x += Math.abs(velocity.x) * rotation * delta * 0.01
	
	var floorLeft = rayFloor(-40)
	var floorRight = rayFloor(40)
	
	if (Math.abs(floorLeft - floorRight) > 60) {
		floorLeft = Math.min(floorLeft, floorRight)
		floorRight = floorLeft
	}
	var floorY = (floorLeft + floorRight) / 2
	
	
	if (!isOnFloor && y > floorY) {
		isOnFloor = true
	}
	if (isOnFloor && floorY > y + 30) {
		isOnFloor = false
	}
	
	if (isOnFloor) {
		y = floorY//lerp(y, floorY, 0.8)
		
		
		rotation = pointsAngle(-40, floorLeft, 40, floorRight) * toDegrees * 0.8
		
		if (Game.sinceSpacePressed < 0.1) {
			Game.sinceSpacePressed = 999
			isOnFloor = false
			y -= 10
			velocity.y = -1000
		}
	} else {
		
		if (Game.sinceSpacePressed < 0.1) {
			Game.sinceSpacePressed = 999
			launch()
		}
		velocity.y += delta * 2500.0
		y += velocity.y * delta
		rotation -= rotation * delta * 5.0
	}
	
	if (velocity.x > 0) {
		model.scaleX = 1
	} else {
		model.scaleX = -1
	}
	
	
}

function launch() {
	if (Game.bread.launched)
		return
	Game.bread.launch()
	sinceLaunched = 0
	velocity.y += 500.0
}

var checking = new Point()
function rayFloor(offset) {
	checking.x = x + offset
	checking.y = y - 100
	
	checking = Game.level.localToGlobal(checking)	
	
	//checking = level.ground.globalToLocal(checking)
	var checkingDistance = 30
	var spotted = false
	for(var i = 0; i < 1000; i += 1) {
		if(Game.level.ground.hitTestPoint(checking.x, checking.y, true)){
			spotted = true
			checkingDistance *= 0.5
			checking.y -= checkingDistance
			if (checkingDistance < 0.25) {
				return Game.level.globalToLocal(checking).y
			}
		} else {
			if (spotted) {
				checkingDistance *= 0.5
			}
			checking.y += checkingDistance
		}
	}
	return Game.level.globalToLocal(checking).y
}
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer_1" color="#00FFFF">
          <frames>
            <DOMFrame index="0" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="ToasterModel" name="model">
                  <matrix>
                    <Matrix ty="-36.6"/>
                  </matrix>
                  <transformationPoint>
                    <Point y="-0.05"/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>