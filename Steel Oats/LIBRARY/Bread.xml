<DOMSymbolItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://ns.adobe.com/xfl/2008/" name="Bread" itemID="6600df7e-00000130" linkageExportForAS="true" linkageBaseClass="GuyClip" linkageClassName="Bread" lastModified="1712642506">
  <timeline>
    <DOMTimeline name="Bread" layerDepthEnabled="true">
      <layers>
        <DOMLayer name="Layer_3" color="#FF800A" current="true" isSelected="true">
          <frames>
            <DOMFrame index="0" duration="3" keyMode="9728">
              <Actionscript>
                <script><![CDATA[import flash.geom.Point;
import flash.display.MovieClip;
import flash.events.MouseEvent;

var speed: Number = 400

var shootPressed = false

var velocity: Point = new Point()
var velocityTo: Point = new Point()


var launched = false

var shootT = 0.1

var sinceJump = 99.0

var jumpHolding = false

var state = 0
var attacking = false

var aimX = 0
var aimY = 0
var aimAngle = 0

var sinceReturning = 0

var returningSpin = false

stop()
Game.bread = this

function update() {
	if (launched)
		processAir()
	else {
		
		x = Game.toaster.x + Math.cos(Game.toaster.rotation / toDegrees - Math.PI * 0.5) * 70
		y = Game.toaster.y + Math.sin(Game.toaster.rotation / toDegrees - Math.PI * 0.5) * 70
		model.scaleX = Game.toaster.model.scaleX
		rotation = Game.toaster.rotation
	}
}


function processAir() {
	if (!attacking && sinceJump > 0.05 && jumpHolding) {
		setAttacking(true)
	}
	if (attacking && !jumpHolding) {
		setAttacking(false)
		
	}
	if (attacking) {
		Game.speed = moveToward(Game.speed, 0.4, 0.1)
	} else {
		Game.speed = moveToward(Game.speed, 1.0, 0.01)
	}
	
	var delta = 1 / 60 * Game.speed
	sinceJump += 1 / 60
	
	if (jumpHolding && velocity.y > 1000) {
		jumpHolding = false
	}
	
	velocityTo.x = 0
	
	var accelDuration = 2.0

	if (Game.keyAPressed) {
		velocityTo.x -= 1
	}
	if (Game.keyDPressed) {
		velocityTo.x += 1
	}
	velocityTo.x *= speed
	
	if (Math.abs(velocityTo.x) > 0){
		accelDuration = 0.2
	}
	
	if (jumpHolding) {
		if (Game.keySpaceJustReleased ) {
			jumpHolding = false
			if (sinceJump > 0.3) {
				returningSpin = true
				gotoAndStop(3)
			}
			if (!attacking) {
				Game.bars.gotoAndPlay("close")
			}
		}
	} else {
		sinceReturning += delta / 0.2
	}
	
	aimAngle = pointAngle(mouseX, mouseY)
	
	
	if (jumpHolding || attacking) {
		if (Game.mouseJustPressed) {
			shootPressed = true
		}
		velocity.x = moveToward(velocity.x, velocityTo.x, speed / accelDuration * delta)
		velocity.y += (Math.abs(velocity.y * 3) + 600) * delta
		
	} else {
		aimAngle = 0.5
		if (returningSpin) {
			gun.visible = false
			var dir = sign(velocity.x)
			model.rotation = lerp(model.rotation, -dir * 20, 0.2)
			if (sinceReturning < 0.6) {
				rotation += 360 * 8 * delta * dir
				delta *= 0.1
			} else {
				if (returningSpin) {
					returningSpin = false
					gotoAndStop(2)
				}
			}
			model.scaleX = sign(Game.toaster.x - x)
		} else {
			gun.visible = true
			rotation = lerp(rotation, 0, 0.2)
			model.rotation = lerp(model.rotation, 0, 0.2)
		}
		var distanceToToaster = pointsDistance(x, y, Game.toaster.x, Game.toaster.y)
		var angleToToaster = pointsAngle(x, y, Game.toaster.x, Game.toaster.y - distanceToToaster * 0.7)
		var speed = 1000 * delta * Math.min(sinceReturning, 4)
		x += Math.cos(angleToToaster) * speed
		y += Math.sin(angleToToaster) * speed
		
		velocity.x -= velocity.x * delta * 5.0
		velocity.y -= velocity.y * delta * 5.0
		//velocity.y += 4000 * delta
		if (distanceToToaster < 100) {
			unlaunch()
		}
	}
	
	x += velocity.x * delta
	y += velocity.y * delta
	
	if (sinceJump > 0.3) {
		model.rotation += velocity.x * delta * 2.0
	}
		
	shootT -= 1 / 60
	if (shootT <= 0 && jumpHolding && shootPressed) {
		shootT += 0.2
		shootBullet(0)
		shootPressed = false
		Game.speed = 1.0
	}
	
	aimX = Math.cos(aimAngle)
	aimY = Math.sin(aimAngle)
	
	gun.x = aimX * 40
	gun.y = aimY * 40
	gun.rotation = aimAngle * toDegrees
	gun.scaleY = aimX < 0 ? -1 : 1
	
}

function setAttacking(value) {
	if (attacking == value)
		return
	attacking = value
	
	if (!value)
		Game.bars.gotoAndPlay("close")
}

function launch() {
	if (launched) {
		return
	}
	launched = true
	velocity.y = -1600
	velocity.x = rotation * 20
	model.gotoAndStop(2)
	model.rotation = 0
	shootT = 0.3
	jumpHolding = true
	sinceJump = 0.0
	sinceReturning = 0.0
	shootPressed = false
	Game.bars.gotoAndPlay("open")
	visible = true
}

function shootBullet(angleOffset) {
	var bullet = new Bullet()
	Game.level.addChild(bullet)
	
	bullet.x = x + aimX * 60
	bullet.y = y + aimY * 60
	var speed = 1500
	bullet.init(
			aimX * speed,
			aimY * speed
	)
	velocity.x -= aimX * 150
	velocity.y -= aimY * 60
	bullet.rotation = aimAngle * toDegrees
	gun.gotoAndPlay(2)
}

function unlaunch() {
	setAttacking(false)
	model.rotation = 0
	launched = false
	model.gotoAndStop(1)
	Game.speed = 1
	//returningSpin = false
	//gotoAndStop(2)
	
	visible = false
	if (Game.bars.currentFrame > 1 && Game.bars.currentFrame < 7)
		Game.bars.gotoAndPlay("close")
	
	Game.audios.unlaunch.play()
	
}

function rayFloor(offset) {
	var checkingX = x + offset
	var checkingY = y
	var checkingDistance = 30
	var spotted = false
	for(var i = 0; i < 1000; i += 1) {
		if(Game.level.ground.hitTestPoint(checkingX, checkingY, true)){
			spotted = true
			checkingDistance *= 0.5
			checkingY -= checkingDistance
			if (checkingDistance < 1.0) {
				return checkingY
			}
		} else {
			if (spotted) {
				checkingDistance *= 0.5
			}
			checkingY += checkingDistance
		}
	}
	return checkingY
}
]]></script>
              </Actionscript>
              <elements/>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer_4" color="#FF4FFF">
          <frames>
            <DOMFrame index="0" duration="2" keyMode="9728">
              <elements/>
            </DOMFrame>
            <DOMFrame index="2" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.99755859375" b="0.0693817138671875" c="-0.0693817138671875" d="0.99755859375" tx="0.05" ty="-0.9"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="-0.05" y="-0.2"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.5"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.99749755859375" b="-0.06982421875" c="0.06982421875" d="0.99749755859375" ty="-0.9"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.1" y="-0.35"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.5"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.991378784179688" b="-0.130508422851562" c="0.130508422851562" d="0.991378784179688" ty="-0.85"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.15" y="-0.4"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.3984375"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.991363525390625" b="0.130523681640625" c="-0.130523681640625" d="0.991363525390625" tx="-0.05" ty="-0.9"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.1" y="-0.35"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.3984375"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.981689453125" b="0.189987182617188" c="-0.189987182617188" d="0.981689453125" ty="-0.95"/>
                  </matrix>
                  <transformationPoint>
                    <Point y="-0.35"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.30078125"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.97808837890625" b="-0.20770263671875" c="0.20770263671875" d="0.97808837890625" tx="0.1" ty="-0.95"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.1" y="-0.35"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.30078125"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.962554931640625" b="-0.27069091796875" c="0.27069091796875" d="0.962554931640625" tx="0.1" ty="-0.95"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.1" y="-0.4"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.19921875"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.96893310546875" b="0.246826171875" c="-0.246826171875" d="0.96893310546875" tx="-0.05" ty="-1"/>
                  </matrix>
                  <transformationPoint>
                    <Point y="-0.35"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.19921875"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.953567504882812" b="0.30072021484375" c="-0.30072021484375" d="0.953567504882812" ty="-1.05"/>
                  </matrix>
                  <transformationPoint>
                    <Point y="-0.45"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.1015625"/>
                  </color>
                </DOMSymbolInstance>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" symbolType="graphic" loop="loop">
                  <matrix>
                    <Matrix a="0.93963623046875" b="-0.341690063476562" c="0.341690063476562" d="0.93963623046875" tx="0.3" ty="-1.05"/>
                  </matrix>
                  <transformationPoint>
                    <Point x="0.1" y="-0.55"/>
                  </transformationPoint>
                  <color>
                    <Color alphaMultiplier="0.1015625"/>
                  </color>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer_5" color="#009999">
          <frames>
            <DOMFrame index="0" duration="3" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="Gun" name="gun">
                  <matrix>
                    <Matrix tx="47.3" ty="-0.95"/>
                  </matrix>
                  <transformationPoint>
                    <Point/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
        <DOMLayer name="Layer_2" color="#9933CC" locked="true">
          <frames>
            <DOMFrame index="0" duration="3" keyMode="9728">
              <elements>
                <DOMSymbolInstance libraryItemName="BreadModel" name="model" centerPoint3DX="-9.95" centerPoint3DY="-21.75">
                  <matrix>
                    <Matrix a="0.999984741210938" d="0.999984741210938" tx="0.05" ty="-0.9"/>
                  </matrix>
                  <transformationPoint>
                    <Point y="-0.15"/>
                  </transformationPoint>
                </DOMSymbolInstance>
              </elements>
            </DOMFrame>
          </frames>
        </DOMLayer>
      </layers>
    </DOMTimeline>
  </timeline>
</DOMSymbolItem>